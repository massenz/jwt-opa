/*
 * Copyright (c) 2021 AlertAvert.com.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Marco Massenzio (marco@alertavert.com)
 */

plugins {
    id 'java'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.springframework.boot' version '3.1.5'
}

group 'com.alertavert'
version = "0.5.0"

repositories {
    mavenLocal()
    mavenCentral()
}

bootJar {
    mainClass.set('com.alertavert.opademo.JwtDemoApplication')
}

dependencies {
    // ----- IMPORTANT -----
    // If you modify the following line, make sure to also update the `build.gradle` file in the
    // `test-released` branch, so that the CI tests can run against the released version.
    // We depend here on the the local version here, so we can verify changes while developing:
    implementation project (':jwt-opa')
    // ----- SECTION ENDS -----

    // For the @PostConstruct annotation
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'commons-codec:commons-codec:1.13'

    // For the @PostConstruct annotation
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Swagger 2 API & UI
    // "Raw" JSON at http://localhost:8081/v2/api-docs
    // UI at http://localhost:8081/swagger-ui/ (trailing slash matters)
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // AWS Java SDK
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.573'

    // AWS SDK for Secrets Manager,
    // see: https://docs.aws.amazon.com/code-samples/latest/catalog/code-catalog-javav2-example_code-secretsmanager.html
    implementation "software.amazon.awssdk:secretsmanager:${awsSdkVersion}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation "org.testcontainers:mongodb:$tcVersion"
}

jacoco {
    toolVersion = '0.8.7'
}

test {
    useJUnitPlatform()
    // A build will fail unless test coverage reaches minimum.
    // See: https://reflectoring.io/jacoco/
    finalizedBy jacocoTestCoverageVerification

    testLogging {
        showExceptions = true
        showCauses = true
    }
}
