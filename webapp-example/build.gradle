/*
 * Copyright (c) 2021 AlertAvert.com.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Marco Massenzio (marco@alertavert.com)
 */

plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.alertavert.opademo'
version = "0.3.0"

repositories {
    // Adding local repository for Gradle to find jwt-opa before it gets published.
    // Use: ./gradlew :jwt-opa:publishToMavenLocal
    // mavenLocal()
    mavenCentral()
}

ext {
    // TODO: upgrade to the latest version when published (0.8.0)
    // This can be changed to an yet-unpublished version by using mavenLocal()
    // for local tests.
    jwtOpaVersion = "0.8.0"
    lombokVersion = "1.18.22"
    tcVersion = "1.15.1"
}

bootJar {
    mainClassName = 'com.alertavert.opademo.JwtDemoApplication'
}

dependencies {
    // We use the actual dependency here, instead of depending on the module in the repository so
    // as to emulate an actual project using jwt-opa externally.
        implementation project (':jwt-opa')
//    implementation "com.alertavert:jwt-opa:${jwtOpaVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'commons-codec:commons-codec:1.13'

    // Swagger 2 API & UI
    // "Raw" JSON at http://localhost:8081/v2/api-docs
    // UI at http://localhost:8081/swagger-ui/ (trailing slash matters)
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation "org.testcontainers:mongodb:$tcVersion"
}

jacoco {
    toolVersion = '0.8.7'
}

test {
    useJUnitPlatform()
    // A build will fail unless test coverage reaches minimum.
    // See: https://reflectoring.io/jacoco/
    finalizedBy jacocoTestCoverageVerification

    testLogging {
        showExceptions = true
        showCauses = true
    }
}
