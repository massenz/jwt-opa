# JWT / OPA Demo application configuration
#
# Created by M. Massenzio, 2020-11-22

logging:
  level:
    com.alertavert: info

management:
  endpoints:
    web:
      exposure:
        include: "env, info, health"


# This is used to build the Rule validation endpoint:
#   /v1/data/kapsules/allow
opa:
  policy: kapsules
  rule: allow

db:
  server: localhost
  port: 27017
  name: opa-demo-db

  admin:
    username: admin
    password: 8535b9c4-a

# Just making the response JSON body a bit prettier.
spring:
  jackson:
    default-property-inclusion: "non_null"
---
spring:
  config:
    activate:
      on-profile: debug

# Doing this only for debug builds, as it may leak sensitive information
# to an attacker.
server:
  error:
    include-message: always
  port: 8081

tokens:
  # The issuer is carried over in the API Token and can be used to determine the
  # application context, when resolving different policies.
  issuer: "demo-issuer"

  # By default, the Token expires after a full day (24-hour); change the following two
  # properties (the duration expressed in seconds) to adapt to your application
  # security requirements.
  should_expire: true
  # For the demo app, we make the API Token valid for 5 minutes.
  expires_after_sec: 3000

  # Interval in seconds, after creation, during which the JWT is not valid.
  # Corresponds to the `nbf` ("not before") claim.
  # By default it is 0 (i.e., immediately valid, it could be set to a value
  # larger than 0 to enforce a delay on using the token).
  not_before_delay_sec: 0

keys:
  # Elliptic Curve Signature algorithm
  algorithm: "EC"
  # Relative paths to a pair of private/public keys
  # used to sign/verify the API Token (JWTs).
  # See README.md for more information on how to generate them.
  priv: "private/ec-key.pem"
  pub: "private/ec-key-pub.pem"

logging:
  level:
    com.alertavert: debug
    reactor.netty: warn
    org:
      springframework:
        security:
          web:
            authentication: debug

management:
  endpoints:
    web:
      exposure:
        include: "*"

# OPA Server running in a local container:
#    docker run -d --rm -p 8181:8181 --name opa openpolicyagent/opa run --server
opa:
  server: "localhost:8181"

routes:
  # These endpoints will be accessible without authentication
  allowed:
    - "/health"
    - "/demo"
    - "/favicon.ico"
    - "/login/reset/*"

  # These will require the user to authenticate, but will not
  # be subject to OPA Policies authorization check.
  # By default, /login is already in the list, BUT would need to be
  # explicitly added (if needed), if you override the default routes.authenticated property:
  authenticated:
   - "/login"
   - "/swagger-ui"
   - "/swagger-ui/**"
   - "/swagger-resources/**"
   - "/v3/api-docs"
   - "/v3/api-docs/**"

# CORS Configuration
#
# See the SecurityConfiguration class for an example how to use this.
cors:
  allowed:
    - "http://*.example.com"
    - "http://*.alertavert.com:*"
    - "http://localhost:*"
