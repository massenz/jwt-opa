# JWT / OPA Demo application configuration
#
# Created by M. Massenzio, 2020-11-22

logging:
  level:
    io.kapsules: info

management:
  endpoints:
    web:
      exposure:
        include: "env, info, health"

# This is used to build the Rule validation endpoint:
#   /v1/data/kapsules/allow
opa:
  policy: kapsules
  rule: allow

db:
  server: localhost
  port: 27017
  name: opa-demo-db

# Just making the response JSON body a bit prettier.
spring:
  jackson:
    default-property-inclusion: "non_null"
---
spring:
  profiles: debug

# Doing this only for debug builds, as it may leak sensitive information
# to an attacker.
server:
  error:
    include-message: always

tokens:
  # The issuer is carried over in the API Token and can be used to determine the
  # application context, when resolving different policies.
  issuer: "demo-issuer"

  # By default, the Token expires after one hour; change the following two
  # properties (the duration expressed in seconds) to adapt to your application
  # security requirements.
  should_expire: true
  expires_after_sec: 86400

  # Interval in seconds, after creation, during which the JWT is not valid.
  # Corresponds to the `nbf` ("not before") claim.
  not_before_delay_sec: 60

  signature:
    # We currently support Elliptic Curve signatures, and passphrase-based secrets.
    # If using a passphrase (not recommended) use something like this:
    # algorithm: "SECRET"
    # secret: "my very zekret pa55phrase"
    algorithm: "EC"
    keypair:
      # These can be absolute or relative paths to a pair of private/public keys
      # used to sign/verify the API Token (JWTs).
      # See README.md for more information on how to generate them.
      priv: "../private/ec-key.pem"
      pub: "../private/ec-key-pub.pem"

logging:
  level:
    io.kapsules: debug
    reactor.netty: warn

management:
  endpoints:
    web:
      exposure:
        include: "*"

# OPA Server running in a local container:
#    docker run -d --rm -p 8181:8181 --name opa openpolicyagent/opa run --server
opa:
  server: "localhost:8181"

routes:
  allowed:
    - "/health"
    - "/demo"
