#!/bin/bash
#
# Copyright (c) 2021 AlertAvert.com.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: Marco Massenzio (marco@alertavert.com)
#

#
# Generates a Elliptict Cryptography keypair using openssl

set -e

function usage {
  echo "Usage: $(basename $0) KEY [DIR]

    KEY     the name of the key pair to upload, required;

    DIR     optionally, a directory where the keypair is stored

This script uploads a key pair named 'KEY.pem' and 'KEY.pub' to AWS Secrets Manager,
using the \$AWS_PROFILE env var to obtain the credentials and the region to upload to.

The pair can be generated using the keygen.sh script.
Requires the aws binary CLI (https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)
"
}

KEY=${1:-}
DIR=${2:-}

if [[ -z ${KEY} || ${1:-} == "--help" || ${1:-} == "-h" ]]; then
  usage
  exit 1
fi

if [[ -z $(which aws) ]]
then
  usage
  echo "ERROR: This script requires the aws CLI to upload the keys to Secrets Manager"
  exit 1
fi


PRIV=${KEY}.pem
PUB=${KEY}.pub
if [[ -n ${DIR} && -d ${DIR} ]]; then
  PRIV=${DIR}/${PRIV}
  PUB=${DIR}/${PUB}
fi

out=$(mktemp /tmp/secret-XXXXXXXX.tmp)
cat <<EOF >$out
{
  "priv": "$(while read -r line; do if [[ ! ${line} =~ ^----- ]]; \
      then echo -n ${line}; fi; done < $PRIV)",
  "pub": "$(while read -r line; do [[ ${line} =~ ^----- ]] || echo -n ${line}; done < $PUB)",
  "algorithm": "EC"
}
EOF

aws secretsmanager create-secret --name $KEY \
  --description "Keypair $KEY generated by the $(basename $0) script" \
  --secret-string file://$out

rm $out
echo "[SUCCESS] Key Pair uploaded to AWS: ${KEY}"
