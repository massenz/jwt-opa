/*
 * Copyright (c) 2021 AlertAvert.com.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Marco Massenzio (marco@alertavert.com)
 */

plugins {
    // Required to build a "fatjar" as we have to disable the `bootJar` task here.
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'signing'
    id 'maven-publish'
}

// While we use the Spring Boot machinery (mostly around managing dependencies and configuration
// properties) we do not want an executable Spring Boot application JAR to be generated, but only
// the library JAR to be made available.
bootJar.enabled = false
jar.enabled = true
jar.dependsOn shadowJar

jacoco {
    toolVersion = '0.8.7'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation "com.jayway.jsonpath:json-path-assert:$jsonpathVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Test Containers: https://www.testcontainers.org/
    testImplementation "org.testcontainers:testcontainers:$tcVersion"
    testImplementation "org.testcontainers:junit-jupiter:$tcVersion"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = minCoverageRatio
            }
        }
    }
}

javadoc.failOnError = false
javadoc.title = 'AlertAvert JWT OPA'

// Generating Source & Javadoc JARs for publication
// See: https://central.sonatype.org/publish/publish-gradle/
java {
    withJavadocJar()
    withSourcesJar()
}

// Remove the -all extension from the "fat" Jar, or it can't be used
// when published to Maven Central.
shadowJar {
    archiveClassifier.set('')
}

// Publishing Artifact to Maven Central
//
// The contents of this section are described here:
//   https://docs.gradle.org/current/userguide/publishing_maven.html
//
// To Release to Maven see: https://central.sonatype.org/publish/release/
publishing {
    publications {
        jwtopaLibrary(MavenPublication) {
            artifactId = 'jwt-opa'
            artifacts = [ shadowJar, javadocJar, sourcesJar ]
            pom {
                name = 'Spring Security & OPA'
                description = 'Spring Security & Open Policy Agent integration'
                url = 'https://github.com/massenz/jwt-opa'

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    url = 'https://github.com/massenz/jwt-opa'
                    connection = 'scm:https://github.com/massenz/jwt-opa.git'
                    developerConnection = 'scm:git@github.com:massenz/jwt-opa.git'
                }
                developers {
                    developer {
                        id = 'massenz'
                        name = 'Marco Massenzio'
                        email = 'marco@alertavert.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            // These are stored in gradle.properties and NEVER uploaded to GitHub
            // See: https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.repositories.MavenArtifactRepository.html
            credentials {
                username "${ossrhUsername}"
                password "${ossrhPassword}"
            }
        }
    }
}

// Signs the `publication` generated above with the name `jwtopaLibrary`
// Signing plugin, see: https://docs.gradle.org/current/userguide/signing_plugin.html#signing_plugin
signing {
    sign publishing.publications.jwtopaLibrary
}

// TODO MM: use Nexus to enable auto-release, after artifact upload to Sonatype.
//      use: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
// See: https://github.com/gradle-nexus/publish-plugin/
//
//plugins {
//    id("io.github.gradle-nexus.publish-plugin") version "«version»"
//}
//
//nexusPublishing {
//    repositories {
//        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
//            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
//            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
//            username "${ossrhUsername}"
//            password "${ossrhPassword}"
//        }
//    }
//}
