/*
 * Copyright (c) 2021 AlertAvert.com.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Marco Massenzio (marco@alertavert.com)
 */
plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.7'

    // To upload the Artifact to Maven Central
    // See: https://docs.gradle.org/current/userguide/publishing_maven.html
    id 'maven-publish'
}

// Disable the default Spring Boot executable JAR to be created.
bootJar.enabled = false

ext {
    javaVersion = JavaVersion.current()
    jsonpathVersion = "2.5.0"
    lombokVersion = "1.18.22"
    minCoverageRatio = 0.80
    mockitoVersion = "3.6.0"
    tcVersion = "1.15.1"
}

task logCoverageRatio {
    doLast {
        logger.lifecycle "Min Coverage: ${100 * minCoverageRatio}%"
    }
}

allprojects {
    group 'com.alertavert'
    version '0.7.3'

    sourceCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    dependencies {
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"

        implementation 'com.auth0:java-jwt:3.10.3'
        implementation 'org.bouncycastle:bcprov-jdk15on:1.59'
        implementation 'commons-codec:commons-codec:1.6'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    // We want the test and coverage reports to be based on the
    // most recent build.
    jacocoTestCoverageVerification.dependsOn(jacocoTestReport)
    jacocoTestCoverageVerification.finalizedBy(logCoverageRatio)

    test {
        useJUnitPlatform()
        // A build will fail unless test coverage reaches minimum.
        // See: https://reflectoring.io/jacoco/
        finalizedBy jacocoTestCoverageVerification
    }

    javadoc {
        destinationDir = file("${rootDir}/docs/javadoc/${project.name}")
    }
}
